import os
import logging
from collections import defaultdict
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import sqlite3

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
ADMIN_ID = 6356238822

# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
current_dir = os.path.dirname(os.path.abspath(__file__))

# –°–æ–∑–¥–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db_path = os.path.join(current_dir, 'users.db')

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect(db_path, check_same_thread=False)
cursor = conn.cursor()

# –õ–æ–≥–∏—Ä—É–µ–º –ø—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
logger.info(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞/–æ—Ç–∫—Ä—ã—Ç–∞: {db_path}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –µ—ë –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
cursor.execute('''
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    username TEXT,
    is_banned INTEGER DEFAULT 0
)
''')
conn.commit()

# –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
logger.info("–¢–∞–±–ª–∏—Ü–∞ 'users' —Å–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞.")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å—Ç–æ–ª–±–µ—Ü username
cursor.execute("PRAGMA table_info(users)")
columns = [column[1] for column in cursor.fetchall()]
if 'username' not in columns:
    cursor.execute('ALTER TABLE users ADD COLUMN username TEXT')
    conn.commit()
    logger.info("–°—Ç–æ–ª–±–µ—Ü 'username' –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü—É 'users'.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_user(user_id, username):
    cursor.execute('INSERT OR IGNORE INTO users (user_id, username, is_banned) VALUES (?, ?, 0)', (user_id, username))
    conn.commit()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω: ID={user_id}, Username={username}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
def is_user_banned(user_id):
    cursor.execute('SELECT is_banned FROM users WHERE user_id = ?', (user_id,))
    result = cursor.fetchone()
    return result[0] if result else False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def ban_user(user_id):
    cursor.execute('UPDATE users SET is_banned = 1 WHERE user_id = ?', (user_id,))
    conn.commit()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω: ID={user_id}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def unban_user(user_id):
    cursor.execute('UPDATE users SET is_banned = 0 WHERE user_id = ?', (user_id,))
    conn.commit()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω: ID={user_id}")

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∞–ª—å–±–æ–º–æ–≤
media_groups = defaultdict(list)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    username = update.message.from_user.username
    add_user(user_id, username)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ñ–æ—Ç–æ, –¥–æ–∫—É–º–µ–Ω—Ç –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    username = update.message.from_user.username or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    first_name = update.message.from_user.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    message_text = update.message.text

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if is_user_banned(user_id):
        await update.message.reply_text("–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_message = (
        f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
        f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {first_name} (@{username})\n"
        f"üÜî ID: {user_id}\n"
        f"üí¨ –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n{message_text}"
    )

    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await context.bot.send_message(chat_id=ADMIN_ID, text=admin_message)

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–¥–∏–∞ (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞–ª—å–±–æ–º—ã)
async def handle_media(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    username = update.message.from_user.username or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    first_name = update.message.from_user.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if is_user_banned(user_id):
        await update.message.reply_text("–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–∞—Å—Ç—å—é –∞–ª—å–±–æ–º–∞
    media_group_id = update.message.media_group_id
    if media_group_id:
        # –î–æ–±–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∞–ª—å–±–æ–º–æ–≤
        media_groups[media_group_id].append(update.message)
        return

    # –ï—Å–ª–∏ —ç—Ç–æ –æ–¥–∏–Ω–æ—á–Ω–æ–µ —Ñ–æ—Ç–æ
    if update.message.photo:
        photo_file = await update.message.photo[-1].get_file()
        file_url = photo_file.file_path
        caption = update.message.caption or "–ë–µ–∑ –ø–æ–¥–ø–∏—Å–∏"

        admin_message = (
            f"üì∏ –ù–æ–≤–æ–µ —Ñ–æ—Ç–æ:\n"
            f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {first_name} (@{username})\n"
            f"üÜî ID: {user_id}\n"
            f"üìù –ü–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ:\n{caption}\n"
            f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ:\n{file_url}"
        )
        await context.bot.send_message(chat_id=ADMIN_ID, text=admin_message)
        await context.bot.send_photo(chat_id=ADMIN_ID, photo=file_url)

    # –ï—Å–ª–∏ —ç—Ç–æ –æ–¥–∏–Ω–æ—á–Ω–æ–µ –≤–∏–¥–µ–æ
    elif update.message.video:
        video_file = await update.message.video.get_file()
        file_url = video_file.file_path
        caption = update.message.caption or "–ë–µ–∑ –ø–æ–¥–ø–∏—Å–∏"

        admin_message = (
            f"üé¨ –ù–æ–≤–æ–µ –≤–∏–¥–µ–æ:\n"
            f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {first_name} (@{username})\n"
            f"üÜî ID: {user_id}\n"
            f"üìù –ü–æ–¥–ø–∏—Å—å –∫ –≤–∏–¥–µ–æ:\n{caption}\n"
            f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ:\n{file_url}"
        )
        await context.bot.send_message(chat_id=ADMIN_ID, text=admin_message)
        await context.bot.send_video(chat_id=ADMIN_ID, video=file_url)

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text("–í–∞—à–µ –º–µ–¥–∏–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–ª—å–±–æ–º–∞
async def process_media_group(context: ContextTypes.DEFAULT_TYPE):
    for media_group_id, messages in list(media_groups.items()):
        if not messages:
            continue

        first_message = messages[0]
        user_id = first_message.from_user.id
        username = first_message.from_user.username or "–ë–µ–∑ –∏–º–µ–Ω–∏"
        first_name = first_message.from_user.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        admin_message = (
            f"üìö –ù–æ–≤—ã–π –∞–ª—å–±–æ–º:\n"
            f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {first_name} (@{username})\n"
            f"üÜî ID: {user_id}\n"
        )
        await context.bot.send_message(chat_id=ADMIN_ID, text=admin_message)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –º–µ–¥–∏–∞ –∏–∑ –∞–ª—å–±–æ–º–∞
        for message in messages:
            if message.photo:
                photo_file = await message.photo[-1].get_file()
                file_url = photo_file.file_path
                await context.bot.send_photo(chat_id=ADMIN_ID, photo=file_url)
            elif message.video:
                video_file = await message.video.get_file()
                file_url = video_file.file_path
                await context.bot.send_video(chat_id=ADMIN_ID, video=file_url)

        # –£–¥–∞–ª—è–µ–º –∞–ª—å–±–æ–º –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
        del media_groups[media_group_id]

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
async def handle_document(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    username = update.message.from_user.username or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    first_name = update.message.from_user.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if is_user_banned(user_id):
        await update.message.reply_text("–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –¥–æ–∫—É–º–µ–Ω—Ç–∞
    document_file = await update.message.document.get_file()
    file_url = document_file.file_path

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_message = (
        f"üìÑ –ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç:\n"
        f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {first_name} (@{username})\n"
        f"üÜî ID: {user_id}\n"
        f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç:\n{file_url}"
    )

    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await context.bot.send_message(chat_id=ADMIN_ID, text=admin_message)
    await context.bot.send_document(chat_id=ADMIN_ID, document=file_url)

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text("–í–∞—à –¥–æ–∫—É–º–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_voice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    username = update.message.from_user.username or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    first_name = update.message.from_user.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if is_user_banned(user_id):
        await update.message.reply_text("–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    voice_file = await update.message.voice.get_file()
    file_url = voice_file.file_path

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_message = (
        f"üé§ –ù–æ–≤–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
        f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {first_name} (@{username})\n"
        f"üÜî ID: {user_id}\n"
        f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª:\n{file_url}"
    )

    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await context.bot.send_message(chat_id=ADMIN_ID, text=admin_message)
    await context.bot.send_voice(chat_id=ADMIN_ID, voice=file_url)

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text("–í–∞—à–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–π (–∫—Ä—É–∂–∫–æ–≤)
async def handle_video_note(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    username = update.message.from_user.username or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    first_name = update.message.from_user.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if is_user_banned(user_id):
        await update.message.reply_text("–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è
    video_note_file = await update.message.video_note.get_file()
    file_url = video_note_file.file_path

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_message = (
        f"üé• –ù–æ–≤–æ–µ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ (–∫—Ä—É–∂–æ–∫):\n"
        f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {first_name} (@{username})\n"
        f"üÜî ID: {user_id}\n"
        f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª:\n{file_url}"
    )

    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await context.bot.send_message(chat_id=ADMIN_ID, text=admin_message)
    await context.bot.send_video_note(chat_id=ADMIN_ID, video_note=file_url)

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text("–í–∞—à–µ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ (–∫—Ä—É–∂–æ–∫) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ban
async def ban(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.from_user.id != ADMIN_ID:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        user_id_to_ban = int(context.args[0])
        ban_user(user_id_to_ban)
        await update.message.reply_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id_to_ban} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    except (IndexError, ValueError):
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /ban <user_id>")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /unban
async def unban(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.from_user.id != ADMIN_ID:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        user_id_to_unban = int(context.args[0])
        unban_user(user_id_to_unban)
        await update.message.reply_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id_to_unban} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    except (IndexError, ValueError):
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /unban <user_id>")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
    TOKEN = "7952695336:AAGbFGBsugbn7tmjIpzxUk_9NmOyeZvTlcw"

    application = ApplicationBuilder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("ban", ban))
    application.add_handler(CommandHandler("unban", unban))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.add_handler(MessageHandler(filters.PHOTO | filters.VIDEO, handle_media))
    application.add_handler(MessageHandler(filters.Document.ALL, handle_document))
    application.add_handler(MessageHandler(filters.VOICE, handle_voice))
    application.add_handler(MessageHandler(filters.VIDEO_NOTE, handle_video_note))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()